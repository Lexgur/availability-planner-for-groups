---
description: 
globs: 
alwaysApply: true
---
# Availability Planner Domain Guide

## Core Business Concepts

### Groups
- Hobbyist groups that need to coordinate activities
- Each group has multiple members
- Groups can have different types of activities
- Groups need to find common availability windows

### Members
- Individual participants in groups
- Each member has personal availability schedules
- Members can belong to multiple groups
- Members can set preferences for activity times

### Activities
- Events or meetings organized by groups
- Activities have specific time requirements
- Activities can be recurring or one-time
- Activities need minimum/maximum participant counts

### Availability Windows
- Time slots when members are available
- Can be recurring (weekly, monthly) or specific dates
- Include start time, end time, and frequency
- Can have different priority levels

## Key Features

### Calendar Integration
- Visual calendar interface for availability
- Overlay multiple member schedules
- Highlight common availability windows
- Support for different calendar views (day, week, month)

### Scheduling Logic
- Find optimal meeting times based on member availability
- Consider activity duration and frequency
- Handle timezone differences
- Account for member preferences and constraints

### Notification System
- Notify members of new activities
- Remind members of upcoming events
- Alert when availability conflicts arise
- Send calendar invitations

## Data Models

### Core Entities
- **Group**: Collection of members with shared activities
- **Member**: Individual user with availability preferences
- **Activity**: Scheduled event with time and participant requirements
- **Availability**: Time windows when members are free
- **Schedule**: Recurring availability patterns

### Relationships
- Group has many Members (Many-to-Many)
- Group has many Activities (One-to-Many)
- Member has many Availability slots (One-to-Many)
- Activity has many Members (Many-to-Many)

## Business Rules

### Availability Matching
- Activities require minimum participant count
- Consider member preferences (morning/evening, weekdays/weekends)
- Handle timezone conversions automatically
- Prioritize times with maximum member availability

### Scheduling Constraints
- Activities cannot overlap for same group
- Respect member's "busy" time slots
- Consider travel time between activities
- Handle recurring vs. one-time activities differently

### Group Management
- Group admins can create and manage activities
- Members can join/leave groups
- Groups can have different privacy settings
- Support for public and private groups

## User Experience

### Member Workflow
1. Join or create groups
2. Set personal availability preferences
3. View group activities and availability
4. Receive notifications about new activities
5. Confirm attendance for scheduled activities

### Admin Workflow
1. Create and manage groups
2. Invite members to groups
3. Create activities with requirements
4. View member availability overlap
5. Schedule activities at optimal times

## Technical Considerations

### Performance
- Efficient availability calculation algorithms
- Caching for frequently accessed schedules
- Database indexing for time-based queries
- Pagination for large member lists

### Scalability
- Support for groups with many members
- Handle multiple concurrent scheduling requests
- Efficient notification delivery
- Mobile-responsive design

### Integration
- Calendar export (iCal, Google Calendar)
- Email notifications
- Mobile app support
- API for third-party integrations
